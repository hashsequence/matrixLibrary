import { Config, Global } from "@jest/types";
import { EnvironmentContext } from "@jest/environment";
declare type BenchmarkConfig = Partial<Pick<Config.ProjectConfig, "testEnvironment" | "testEnvironmentOptions">>;
declare type ConstructorConfig = {
    projectConfig: Config.ProjectConfig & {
        testEnvironmentOptions?: BenchmarkConfig;
    };
    globalConfig: Config.GlobalConfig;
};
export default class BenchmarkEnvironment {
    env: any;
    global: Global.Global | null;
    moduleMocker: any;
    fakeTimers: any;
    fakeTimersModern: any;
    protected _rootDir: string;
    constructor(config: ConstructorConfig, context?: EnvironmentContext);
    setup(): Promise<void>;
    get resultFile(): string;
    teardown(): Promise<void>;
    runScript(script: any): any;
}
export {};
