import { Deferred, Options } from 'benchmark';
export declare type SuiteDescription = {
    setup?: (() => Promise<void> | void);
    teardown?: (() => Promise<void> | void);
    setupSuite?: (() => Promise<void> | void);
    teardownSuite?: (() => Promise<void> | void);
    [key: string]: (() => Promise<void> | void) | ((deferred: Deferred) => Promise<void> | void) | undefined;
};
declare type OverridableOptions = Partial<Pick<Options, "delay" | "initCount" | "maxTime" | "minSamples" | "minTime">>;
export declare type SuiteOptions = OverridableOptions & {
    timeoutSeconds?: number;
};
export declare function benchmarkSuite(name: string, desc: SuiteDescription, timeoutMsOrOptions?: SuiteOptions | number): void;
export {};
